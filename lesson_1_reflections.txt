How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I was able to see the section where the bug was introduced and the lines that have been removed and replaced with new ones hence detecting the typo error.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Been able to see the history of files that I'm working on will help me debug the changes that are made and revert back to original working version in the scenario where is impacting other users.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    I have control over what get committed in each version with a description of the logical unit of code that I have updated and or added. This will provide me a way of knowing what version to rollback to when I needed. However it doesn't protect me of accidental lost of my local copy.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Due to inter-dependencies of files in the Git repository it is very useful to track all the files and save them as a single version for each commit.

How can you use the commands git log and git diff to view the history of files?

    In order to see addition and or deletion of line of code git log and git diff are very handy commands.

How might using version control make you more confident to make changes that
could break something?

    Using version control we are able to revert back to a known working state of the code and compare it the newer versions of the same code in order to pinpoint where the programmer introduced a bug

Now that you have your workspace set up, what do you want to try using Git for?

    Building Front-End websites and web applications